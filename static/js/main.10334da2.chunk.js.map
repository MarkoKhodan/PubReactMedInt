{"version":3,"sources":["Pages/Users/UserProfilePage.tsx","Pages/Users/UserRegisterPage.tsx","Pages/Users/UserLoginPage.tsx","Pages/Users/UserListPage.tsx","Pages/Companies/CompanyProfilePage.tsx","Components/CompanyItem.tsx","Pages/Companies/CompanyListPage.tsx","Components/Greeting.tsx","Pages/ModalWindow.tsx","Components/TestModalContent.tsx","Types/Count.ts","Store/reducers/counterReducer.ts","Components/Counter.tsx","Pages/IndexPage.tsx","Templates/BodyTemplate.tsx","Store/reducers/index.ts","Store/index.ts","Pages/NotFoundPage.tsx","Api/axios-instance.ts","Pages/StatusPage.tsx","Api/api.ts","App.tsx","index.tsx"],"names":["MockedUserInfo","name","email","age","location","company","UserProfilePage","React","createElement","mockedUsers","password","UserRegisterPage","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setEmail","_useState5","_useState6","setPassword","_useState7","_useState8","error","setError","onSubmit","event","preventDefault","newUser","some","user","toLowerCase","push","alert","htmlFor","type","id","value","onChange","e","target","required","style","color","mockUser","UserLoginPage","mockUsers","UserListPage","users","map","key","mockCompany","address","industry","description","website","CompanyProfilePage","href","CompanyItem","_ref","owner","city","mockCompanies","CompanyListPage","companies","companyItems","Greeting","ModalWindow","title","content","isOpen","onClose","className","onClick","TestModalContent","CounterActionTypes","initialState","count","Counter","dispatch","useDispatch","useSelector","state","counter","INCREMENT","DECREMENT","IndexPage","setIsOpen","BodyTemplate","children","Link","to","rootReducer","combineReducers","arguments","length","undefined","_objectSpread","store","createStore","NotFoundPage","instance","axios","create","baseURL","timeout","headers","Content-Type","Authorization","localStorage","getItem","StatusPage","status_code","result","status","setStatus","useEffect","axiosInstance","get","then","response","data","catch","console","log","App","BrowserRouter","Provider","Routes","Route","path","element","Navigate","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.10334da2.chunk.js","sourcesContent":["import React from \"react\";\nimport {Greeting} from \"../../Components/Greeting\";\nimport BodyTemplate from \"../../Templates/BodyTemplate\";\n\nconst MockedUserInfo = {\n    name: \"Test User\",\n    email: \"test@example.com\",\n    age: 27,\n    location: \"New York, NY\",\n    company: \"Test company\"\n};\n\nfunction UserProfilePage() {\n    return (\n        <div>\n            <h1>User Information</h1>\n            <p>Name: {MockedUserInfo.name}</p>\n            <p>Email: {MockedUserInfo.email}</p>\n            <p>Age: {MockedUserInfo.age}</p>\n            <p>Location: {MockedUserInfo.location}</p>\n            <p>Company: {MockedUserInfo.company}</p>\n        </div>\n    );\n}\n\nexport default UserProfilePage;","import React, { useState } from 'react';\nimport BodyTemplate from \"../../Templates/BodyTemplate\";\n\ninterface User {\n    name: string;\n    email: string;\n    password: string;\n}\n\nconst mockedUsers: User[] = [\n    { name: 'Test 1', email: 'test@example.com', password: 'password1' },\n    { name: 'Test 2', email: 'test@example.com', password: 'password2' },\n    { name: 'Test 3', email: 'test@example.com', password: 'password3' },\n];\n\nfunction UserRegisterPage() {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        const newUser = { name, email, password };\n\n        // Check if the user already exists\n        const userExists = mockedUsers.some(\n            (user) => user.email.toLowerCase() === newUser.email.toLowerCase()\n        );\n\n        if (userExists) {\n            setError('User with this email already exists.');\n        } else {\n            // Add the new user to the mocked users array\n            mockedUsers.push(newUser);\n            alert('User registered successfully!');\n        }\n    };\n\n    return (\n        <div>\n            <h2>Register</h2>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label htmlFor=\"name\">Name:</label>\n                    <input\n                        type=\"text\"\n                        id=\"name\"\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                        required\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"email\">Email:</label>\n                    <input\n                        type=\"email\"\n                        id=\"email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        required\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"password\">Password:</label>\n                    <input\n                        type=\"password\"\n                        id=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        required\n                    />\n                </div>\n                {error && <div style={{ color: 'red' }}>{error}</div>}\n                <button type=\"submit\">Register</button>\n            </form>\n        </div>\n    );\n}\n\nexport default UserRegisterPage;\n","import React, { useState } from 'react';\nimport BodyTemplate from \"../../Templates/BodyTemplate\";\n\ntype User = {\n  email: string;\n  password: string;\n};\n\nconst mockUser: User = {\n  email: 'test@example.com',\n  password: 'password123',\n};\n\nconst UserLoginPage = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setEmail(e.target.value);\n  };\n\n  const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setPassword(e.target.value);\n  };\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (email !== mockUser.email || password !== mockUser.password) {\n      setError('Invalid email or password');\n      return;\n    }\n\n    // Login logic goes here\n  };\n\n  return (\n      <div>\n        <h1>Login Page</h1>\n        <form onSubmit={handleSubmit}>\n          <div>\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" value={email} onChange={handleEmailChange} />\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" value={password} onChange={handlePasswordChange} />\n          </div>\n          {error && <div style={{ color: 'red' }}>{error}</div>}\n          <button type=\"submit\">Login</button>\n        </form>\n      </div>\n\n  );\n};\n\nexport default UserLoginPage;\n","import React from 'react';\nimport { useState } from 'react';\nimport BodyTemplate from \"../../Templates/BodyTemplate\";\n\ntype User = {\n    id: number;\n    name: string;\n    email: string;\n};\n\nconst mockUsers: User[] = [\n    { id: 1, name: 'Test 1', email: 'test1@example.com' },\n    { id: 2, name: 'Test 2', email: 'test2@example.com' },\n    { id: 3, name: 'Test 3', email: 'test3@example.com' },\n];\n\nconst UserListPage = () => {\n    const [users, setUsers] = useState(mockUsers);\n\n    return (\n        <div>\n            <h1>User List Page</h1>\n            <ul>\n                {users.map((user) => (\n                    <li key={user.id}>\n                        {user.name} - {user.email}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default UserListPage;\n","import React from 'react';\nimport { useState } from 'react';\n\ntype Company = {\n    id: number;\n    name: string;\n    address: string;\n    industry: string;\n    description: string;\n    website: string;\n};\n\nconst mockCompany: Company = {\n    id: 1,\n    name: 'Test Company',\n    address: 'New-York',\n    industry: 'IT',\n    description:\n        'Test description',\n    website: 'https://www.test.com',\n};\n\nconst CompanyProfilePage = () => {\n    const [company, setCompany] = useState(mockCompany);\n\n    return (\n        <div>\n            <h1>Company Information Page</h1>\n            <div>\n                <h2>{company.name}</h2>\n                <p>Address: {company.address}</p>\n                <p>Industry: {company.industry}</p>\n                <p>Description: {company.description}</p>\n                <p>\n                    Website: <a href={company.website}>{company.website}</a>\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport default CompanyProfilePage;\n","import React from 'react';\nimport {Company} from \"../Types/Company\";\n\nexport function CompanyItem({ company }: { company: Company }) {\n    return (\n        <li key={company.id}>\n            {company.name} - {company.owner} - {company.city}\n        </li>\n    );\n}","import React from 'react';\nimport { useState } from 'react';\nimport {CompanyItem} from \"../../Components/CompanyItem\";\nimport {Company} from \"../../Types/Company\";\n\nconst mockCompanies: Company[] = [\n    {\n        id: 1,\n        name: 'Test company',\n        owner: 'Test User',\n        city: 'New-York',\n    },\n    {\n        id: 2,\n        name: 'Test company 2 ',\n        owner: 'Test User 2',\n        city: 'New-York',\n    },\n    {\n        id: 3,\n        name: 'Test company 3 ',\n        owner: 'Test User 3',\n        city: 'New-York',\n    },\n];\n\nconst CompanyListPage = () => {\n    const [companies, setCompanies] = useState(mockCompanies);\n    const companyItems = companies.map((company) => (\n        <CompanyItem key={company.id} company={company} />\n    ));\n    return (\n        <div>\n            <h1>Company List Page</h1>\n            <ul>\n                {companyItems}\n            </ul>\n        </div>\n    );\n};\n\nexport default CompanyListPage;\n","import React from 'react';\nexport function Greeting() {\n    return (\n        <h2> Welcome to quiz app </h2>\n    )\n}","import React from 'react';\n\ntype ModalProps = {\n    title: string;\n    content: JSX.Element;\n    isOpen: boolean;\n    onClose: () => void;\n};\n\nconst ModalWindow = ({ title, content, isOpen, onClose }: ModalProps) => {\n\n    if (!isOpen) {\n        return null\n    }\n\n    return (\n        <div className=\"modal\">\n            <div className=\"modal-content\">\n                <button className=\"close-btn\" onClick={onClose}>\n                    X\n                </button>\n                <h2>{title}</h2>\n                {content}\n            </div>\n            <div className=\"modal-background\" onClick={onClose}></div>\n        </div>\n    )\n}\n\nexport default ModalWindow;\n","import React from 'react';\nexport function TestModalContent() {\n    return (\n        <p> Test model content </p>\n    )\n}","import {Action} from \"redux\";\n\nexport interface CounterState {\n    count: number;\n}\n\nexport enum CounterActionTypes {\n    INCREMENT = 'INCREMENT',\n    DECREMENT = 'DECREMENT',\n}\nexport interface DecrementAction extends Action {\n    type: CounterActionTypes.DECREMENT;\n}\n\nexport interface IncrementAction extends Action {\n    type: CounterActionTypes.INCREMENT;\n}\n\nexport type CounterAction = IncrementAction | DecrementAction;\n","import {\n  CounterAction,\n  CounterActionTypes,\n  CounterState,\n  DecrementAction,\n  IncrementAction,\n} from \"../../Types/Count\";\n\nconst initialState: CounterState = {\n  count: 0,\n};\n\nexport function counterReducer(state = initialState, action: CounterAction): CounterState {\n  switch (action.type) {\n    case 'INCREMENT':\n      return { ...state, count: state.count + 1 };\n    case 'DECREMENT':\n      return { ...state, count: state.count - 1 };\n    default:\n      return state;\n  }\n}\nexport function increment(): IncrementAction {\n  return { type: CounterActionTypes.INCREMENT };\n}\n\nexport function decrement(): DecrementAction {\n  return { type: CounterActionTypes.DECREMENT };\n}","import React from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {CounterState} from \"../Types/Count\";\nimport {decrement, increment} from \"../Store/reducers/counterReducer\";\n\nexport function Counter() {\n    const dispatch = useDispatch();\n    const count = useSelector((state: { counter: CounterState }) => state.counter.count);\n\n    function handleIncrement() {\n        dispatch(increment());\n    }\n\n    function handleDecrement() {\n        dispatch(decrement());\n    }\n\n    return (\n        <div>\n            <button onClick={handleIncrement}>+</button>\n            <button onClick={handleDecrement}>-</button>\n            <span>Count: {count}</span>\n        </div>\n    );\n}","import React, {useState} from 'react';\nimport {Greeting} from \"../Components/Greeting\";\nimport ModalWindow from \"../Pages/ModalWindow\";\nimport {TestModalContent} from \"../Components/TestModalContent\";\nimport {Counter} from \"../Components/Counter\";\n\nfunction IndexPage() {\n    const [isOpen, setIsOpen] = useState(false);\n\n\n    return (\n        <div>\n            <Greeting />\n            <button onClick={() => setIsOpen(true)}>Open Modal</button>\n            <ModalWindow\n                isOpen={isOpen}\n                onClose={() => setIsOpen(false)}\n                content={<TestModalContent/>}\n                title={\"Test Title\"}\n            />\n            <Counter />\n\n\n        </div>\n    );\n}\n\nexport default IndexPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\ninterface TemplateProps {\n    children: React.ReactNode;\n}\nfunction BodyTemplate({ children }: TemplateProps) {\n    return (\n        <div>\n            <header>\n                <nav>\n                    <ul>\n                        <li>\n                            <Link to=\"/\">Home</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/user\">User Page</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/register\">Register</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/login\">Login</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/user/list\">User List</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/company/list\">Companies List</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/company/\">Company Page</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/status/\">Status Page</Link>\n                        </li>\n                    </ul>\n                </nav>\n            </header>\n            {children}\n        </div>\n    );\n}\n\nexport default BodyTemplate;\n","import {combineReducers} from \"redux\";\nimport {counterReducer} from \"./counterReducer\";\n\nexport const rootReducer = combineReducers({\n    counter: counterReducer\n})","import {createStore} from \"redux\";\nimport {rootReducer} from \"./reducers\";\n\nexport const store = createStore(rootReducer);","import React, {useState} from 'react';\nexport function NotFoundPage() {\n    return <h1>404: Page not found</h1>;\n}","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'http://3.75.186.163/',\n    timeout: 50000,\n    headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('token')\n    }\n});\n\nexport default instance;","import React, {useEffect, useState} from \"react\";\nimport {getStatus} from \"../Api/api\";\nimport {Status} from \"../Types/Status\";\n\n\nconst StatusPage = () => {\n    const [status, setStatus] = useState<Status>({ status_code: 0, result: \"\" });\n\n    useEffect(() => {\n        getStatus()\n            .then(response => {\n                setStatus(response.data);\n            })\n            .catch(error => {\n                console.log(error);\n            })\n    });\n    return (\n        <div>\n            <h1>Status</h1>\n            <p>Status code: {status.status_code}</p>\n            <p>Status result: {status.result}</p>\n        </div>\n    )\n}\nexport default StatusPage\n","import axiosInstance from './axios-instance';\n\nexport const getStatus = () => {\n    return axiosInstance.get('/');\n};","import React from 'react';\nimport {BrowserRouter, Routes, Route, Navigate} from 'react-router-dom';\nimport UserProfilePage from './Pages/Users/UserProfilePage';\nimport UserRegisterPage from './Pages/Users/UserRegisterPage';\nimport UserLoginPage from './Pages/Users/UserLoginPage';\nimport UserListPage from './Pages/Users/UserListPage';\nimport CompanyProfilePage from './Pages/Companies/CompanyProfilePage';\nimport CompanyListPage from './Pages/Companies/CompanyListPage';\nimport IndexPage from './Pages/IndexPage';\nimport BodyTemplate from './Templates/BodyTemplate';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./Store\";\nimport {NotFoundPage} from \"./Pages/NotFoundPage\";\nimport StatusPage from \"./Pages/StatusPage\";\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <Provider store={store}>\n                <BodyTemplate>\n                    <Routes>\n                        <Route path=\"/\" element={<IndexPage />} />\n                        <Route path=\"/user\" element={<UserProfilePage />} />\n                        <Route path=\"/register\" element={<UserRegisterPage />} />\n                        <Route path=\"/login\" element={<UserLoginPage />} />\n                        <Route path=\"/user/list\" element={<UserListPage />} />\n                        <Route path=\"/company/list\" element={<CompanyListPage />} />\n                        <Route path=\"/company\" element={<CompanyProfilePage />} />\n                        <Route path=\"/status\" element={<StatusPage />} />\n                        <Route path=\"/404\" element={<NotFoundPage />} />\n                        <Route path=\"*\" element={<Navigate to=\"/404\" />} />\n                    </Routes>\n                </BodyTemplate>\n            </Provider>\n        </BrowserRouter>\n    );\n}\n\nexport default App;","import React from 'react';\nimport App from './App';\nimport { createRoot } from 'react-dom/client';\n\nconst root = createRoot(document.getElementById('root')!);\n\nroot.render(\n    <App />\n);"],"sourceRoot":""}